Index: app/src/main/java/com/example/quickcash/UserManagement/SignUpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quickcash.UserManagement;\r\n\r\npublic class SignUpActivity {\r\n    // Make tests First. Follow TDD.\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quickcash/UserManagement/SignUpActivity.java b/app/src/main/java/com/example/quickcash/UserManagement/SignUpActivity.java
--- a/app/src/main/java/com/example/quickcash/UserManagement/SignUpActivity.java	
+++ b/app/src/main/java/com/example/quickcash/UserManagement/SignUpActivity.java	
@@ -1,6 +1,655 @@
 package com.example.quickcash.UserManagement;
 
-public class SignUpActivity {
-    // Make tests First. Follow TDD.
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.RadioButton;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.example.quickcash.R;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * This class is responsible for the implementation of the Sign Up Activity
+ */
+public class SignUpActivity extends AppCompatActivity implements View.OnClickListener {
+
+
+    // The instance variable for the Activity
+    private EditText firstName;         // firstName of the user
+    private EditText lastName;          // LastName of the user
+    private Button register;            // reference to the register button
+    private Button login;               // reference to the login button
+    private EditText email;             // email of the user
+    private EditText password;          // password entered by the user
+    private EditText confirmPassword;   // confirm password entered by the user
+    private RadioButton employee;       // reference to the YES button
+    private RadioButton employer;       // reference to the NO button
+    private EditText phone;             // phone number entered by the user
+    static boolean userExists = true;   // boolean to check whether the user Exists or not.
+    static FirebaseDatabase db;         // reference to the fireBase.
+    String AES = "AES";                 // String required for encryption
+
+
+    /**
+     * This method is responsible for implementing the initial build of the program.
+     *
+     * @param savedInstanceState reference to a Bundle object that is passed into the onCreate method of every Android Activity. [Reference: https://tanzu.vmware.com/content/blog/android-savedinstancestate-bundle-faq]
+     */
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+
+        // to retrieve all the information from the Sign Up form UI
+        firstName = (EditText) findViewById(R.id.txtFirstName);
+        lastName = (EditText) findViewById(R.id.txtLastName);
+        email = (EditText) findViewById(R.id.txtEmail);
+        phone = (EditText) findViewById(R.id.txtPhone);
+        password = (EditText) findViewById(R.id.txtUserEnteredPassword);
+        confirmPassword = (EditText) findViewById(R.id.txtConfirmPassword);
+        employee = (RadioButton) findViewById(R.id.radioButton_Employee);
+        employer = (RadioButton) findViewById(R.id.radioButton_Employer);
+
+
+        // establishing a connection to the firebase database.
+        db = FirebaseDatabase.getInstance("https://csci3130-quickcash-group9-default-rtdb.firebaseio.com/");
+
+        // Showcasing a message for the user to know that they have entered the app.
+        Toast.makeText(SignUpActivity.this, "Welcome to Signup", Toast.LENGTH_LONG).show();
+
+        register = (Button) findViewById(R.id.btnRegister);
+
+        // calling the onClick method whenever the register button is clicked.
+        register.setOnClickListener(this);
+
+        login = (Button) findViewById(R.id.buttonLogin);
+
+        // if the login button is clicked instead, the user is transferred to the login page
+        login.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                switch2Login();
+            }
+        });
+
+    }
+
+    /**
+     * To retrive the first Name of the user
+     *
+     * @return returns the first Name of the user in the form of string.
+     */
+    protected String getFirstName() {
+        /**This method is complete**/
+        EditText firstNameBox = findViewById(R.id.txtFirstName);
+        return firstNameBox.getText().toString().trim();
+    }
+
+    /**
+     * To retrive the last Name of the user
+     *
+     * @return returns the last Name of the user in the form of string.
+     */
+    protected String getLastName() {
+        EditText lastNameBox = findViewById(R.id.txtLastName);
+        return lastNameBox.getText().toString().trim();
+    }
+
+    /**
+     * To retrive the email of the user
+     *
+     * @return returns the email of the user in the form of string.
+     */
+    protected String getEmail() {
+        EditText emailBox = findViewById(R.id.txtEmail);
+        return emailBox.getText().toString().trim();
+    }
+
+    /**
+     * To retrive the phone of the user
+     *
+     * @return returns the phone of the user in the form of string.
+     */
+    protected String getPhoneNumber() {
+        EditText phoneNumber = findViewById(R.id.txtPhone);
+        return phoneNumber.getText().toString().trim();
+    }
+
+    /**
+     * To retrive the user entered password of the user
+     *
+     * @return returns the user entered password of the user in the form of string.
+     */
+    protected String getUserEnteredPassword() {
+        EditText password1 = (EditText) findViewById(R.id.txtUserEnteredPassword);
+        return password1.getText().toString().trim();
+    }
+
+    /**
+     * To retrive the confirm password of the user
+     *
+     * @return returns the confirm password of the user in the form of string.
+     */
+    protected String getConfirmPassword() {
+        EditText password2 = (EditText) findViewById(R.id.txtConfirmPassword);
+        return password2.getText().toString().trim();
+
+    }
+
+    /**
+     * To check whether the one of the two radio buttons is selected or not.
+     *
+     * @return returns true if one of the radio button is selected, null otherwise
+     */
+    protected RadioButton getSelectedRadioButton() {
+
+        employer = findViewById(R.id.radioButton_Employer);
+        employee = findViewById(R.id.radioButton_Employee);
+
+        // if the NO radio button is checked
+        if (employer.isChecked()) {
+            return employer;
+
+            // if the YES radio button is checked
+        } else if (employee.isChecked()) {
+            return employee;
+
+        } else {
+            return null;
+        }
+    }
+
+    /**
+     * To check whether the firstName is empty or not
+     *
+     * @return returns true if empty, false otherwise
+     */
+    public boolean isEmptyFirstName(String firstName) {
+        return firstName.length() <= 0;
+    }
+
+    /**
+     * To check whether the lastName is empty or not
+     *
+     * @return returns true if empty, false otherwise
+     */
+    public boolean isEmptyLastName(String lastName) {
+        return lastName.length() <= 0;
+    }
+
+    /**
+     * To check whether the email is empty or not
+     *
+     * @return returns true if empty, false otherwise
+     */
+    public boolean isEmptyEmail(String email) {
+        return email.length() <= 0;
+    }
+
+    /**
+     * To check whether the password is empty or not
+     *
+     * @return returns true if empty, false otherwise
+     */
+    public boolean isEmptyPassword(String password) {
+        return password.length() <= 0;
+    }
+
+    /**
+     * To check whether the phone number is empty or not
+     *
+     * @return returns true if empty, false otherwise
+     */
+    public boolean isEmptyPhoneNumber(String phone) {
+        return phone.length() <= 0;
+    }
+
+    /**
+     * To check whether the confirm password is empty or not
+     *
+     * @return returns true if empty, false otherwise
+     */
+    public boolean isEmptyConfirmPassword(String confirmPassword) {
+        return confirmPassword.length() <= 0;
+    }
+
+    /**
+     * To check whether the phone number is valid or not
+     *
+     * @return returns true if of length 10, false otherwise
+     */
+    public boolean isValidPhoneNumber(String phone) {
+        return phone.length() == 10;
+    }
+
+    /**
+     * To check whether the email is valid
+     *
+     * @return returns true if the email is valid, false otherwise
+     */
+    public boolean isEmailValid(String emailAddress) {
+        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\." +
+                "[a-zA-Z0-9_+&*-]+)*@" +
+                "(?:[a-zA-Z0-9-]+\\.)+[a-z" +
+                "A-Z]{2,7}$";
+
+        Pattern pat = Pattern.compile(emailRegex);
+
+        // to check whether the email address is null
+        if (emailAddress == null)
+            return false;
+        else
+            return pat.matcher(emailAddress).matches();
+    }
+
+    /**
+     * To check whether the password is valid
+     *
+     * @return returns true if the password is valid, false otherwise
+     */
+    //source for ragex : https://stackoverflow.com/questions/3802192/regexp-java-for-password-validation/3802238
+    public boolean isValidPassword(String password1) {
+        Pattern p = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$");
+        Matcher m = p.matcher(password1.trim());
+        return m.find();
+    }
+
+    /**
+     * To check whether the password and confirm passwords match
+     *
+     * @return returns true if the passwords match, false otherwise
+     */
+    public boolean isPasswordMatch(String password1, String password2) {
+        return password1.equals(password2);
+
+    }
+
+
+    /**
+     * This method is responsible for pushing the data to the database
+     *
+     * @param type The type of user , whether employee or employer
+     * @throws Exception To check whether it is not null
+     */
+    protected void pushToDatabase(String type) throws Exception {
+
+        //initialize the database and the related references
+        firstName = (EditText) findViewById(R.id.txtFirstName);
+        lastName = (EditText) findViewById(R.id.txtLastName);
+        email = (EditText) findViewById(R.id.txtEmail);
+        password = (EditText) findViewById(R.id.txtUserEnteredPassword);
+        confirmPassword = (EditText) findViewById(R.id.txtConfirmPassword);
+
+        // encrypt the user entered password
+        String encryptedPassword = encrypt(password.getText().toString());
+
+        // encrypt the user entered confirm password
+        String encryptedConfirmPassword = encrypt(confirmPassword.getText().toString());
+
+
+        // creates a new DAOUser object
+        DAOUser user = new DAOUser();
+
+        // create a User object with all the user information
+        User user1 = new User(firstName.getText().toString(), lastName.getText().toString(), email.getText().toString(), phone.getText().toString(), encryptedPassword, encryptedConfirmPassword, type);
+
+        // pushes the information entered by the user to the firebase
+        user.add(user1).addOnSuccessListener(saved -> {
+
+            // Message if push was successful
+            Toast.makeText(SignUpActivity.this, "Firebase Connected! Data Saved",
+                    Toast.LENGTH_LONG).show();
+
+            // Message if push was not successful
+        }).addOnFailureListener(failed -> {
+            Toast.makeText(SignUpActivity.this, "Data not Saved", Toast.LENGTH_LONG).show();
+
+        });
+
+        // switch to the login page
+        switch2Login();
+    }
+
+
+    /**
+     * To set the text of the Status label
+     *
+     * @param message The message which needs to be set
+     */
+    protected void setStatusMessage(String message) {
+        TextView statusLabel = findViewById(R.id.statusLabel);
+        statusLabel.setText(message);
+    }
+
+    /**
+     * To switch from this Activity to Login Activity
+     */
+    protected void switch2Login() {
+
+        Intent intent = new Intent(this, LogInActivity.class);
+
+        startActivity(intent);
+    }
+
+    /**
+     * The OnClick method is responsible for executing the logic of the Signup
+     *
+     * @param view The UI of the SignUp activity
+     */
+    public void onClick(View view) {
+
+        // all the user entered details
+        String firstName = getFirstName();
+        String lastName = getLastName();
+        String emailAddress = getEmail();
+        String phone = getPhoneNumber();
+        String userEnteredPassword = getUserEnteredPassword();
+        String confirmPassword = getConfirmPassword();
+        String errorMessage = new String("ERROR MESSAGE");
+
+
+        // Sign Up logic
+
+        // loop to check whether all the information is added correctly or not.
+        for (int i = 0; i < 1; i++) {
+
+            // to check for empty first Name
+            if (isEmptyFirstName(firstName)) {
+                errorMessage = "Please Enter Your First Name";
+                break;
+
+            } else {
+                errorMessage = "";
+            }
+
+            // to check for empty last name
+            if (isEmptyLastName(lastName)) {
+                errorMessage = "Please Enter Your Last Name";
+                break;
+
+            } else {
+                errorMessage = "";
+            }
+
+            // to check for empty email address
+            if (isEmptyEmail(emailAddress)) {
+                errorMessage = "Please Enter your email address";
+                break;
+
+            } else {
+
+                // to check for valid email address
+                if (!isEmailValid(emailAddress)) {
+                    errorMessage = "Please Enter valid email address";
+                    break;
+
+                } else {
+                    errorMessage = "";
+                }
+            }
+
+            // to check for empty phone number
+            if (isEmptyPhoneNumber(phone)) {
+                errorMessage = "Please enter your phone number";
+                break;
+
+            } else {
+
+                // to check for valid phone number
+                if (!isValidPhoneNumber(phone)) {
+                    errorMessage = "Phone number should be atleast 10 digits";
+                    break;
+
+                } else {
+                    errorMessage = "";
+                }
+            }
+
+            // to check for empty user entered password
+            if (isEmptyPassword(userEnteredPassword)) {
+                errorMessage = "Please Enter your password";
+                break;
+
+            } else {
+
+                // to check for valid user entered password
+                if (isValidPassword(userEnteredPassword)) {
+                    errorMessage = "";
+                } else {
+                    errorMessage = "Please Enter valid Password";
+                    break;
+                }
+            }
+
+            // to check the confirm Password
+            if (isEmptyConfirmPassword(confirmPassword)) {
+                errorMessage = "Please Enter to confirm your password";
+                break;
+            } else {
+
+                // to check whether the user entered password and confirm password match or not.
+                if (isPasswordMatch(userEnteredPassword, confirmPassword)) {
+                    errorMessage = "";
+
+                } else {
+                    errorMessage = "Passwords don't match. Please Enter again";
+                    break;
+                }
+            }
+
+            // to check that the user has selected one of the two radio buttons
+            if (getSelectedRadioButton() == null) {
+                errorMessage = "Please Select one of the two given options";
+                break;
+
+            } else {
+                errorMessage = "";
+            }
+
+        }
+
+        // to set the error message in the status Label
+        setStatusMessage(errorMessage);
+
+
+        //if error message is empty, then create a new intent to move to main activity
+        if (errorMessage.equals("")) {
+
+            String type = "";
+
+            // to find the tyoe of user
+            if (employee.isChecked()) {
+                type = "Y";
+
+            } else if (employer.isChecked()) {
+                type = "N";
+            }
+
+            // to check whether the user already exists or not.
+            retrieveDataFromFirebase(emailAddress, type);
+
+        }
+    }
+
+    /**
+     * To retrieve information from the firebase
+     *
+     * @param email email of the user
+     * @param type  type of the user
+     */
+    protected void retrieveDataFromFirebase(String email, String type) {
+
+        // reference to the database
+        DatabaseReference userReference = db.getReference(User.class.getSimpleName());
+
+        // adding event listener to the userReference
+        userReference.addValueEventListener(new ValueEventListener() {
+
+            @Override
+            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
+
+                // to see if there is any data in the database
+                if (dataSnapshot.exists()) {
+                    try {
+
+                        // verifying the user credentials using the email and type of user
+                        verifyUserCredentials(dataSnapshot, getEmail(), type);
+
+                    } catch (Exception e) {
+                        e.printStackTrace();
+                    }
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+                System.out.println("Could retrieve: " + error.getCode());
+            }
+
+        });
 
-}
+    }
+
+    /**
+     * This method is responsible for verifying the details of the user
+     *
+     * @param dataSnapshot The firebase object which contains the data
+     * @param email        The email of the user
+     * @param type         The type of the user
+     * @throws Exception The execption to check for NullPointerException
+     */
+    protected void verifyUserCredentials(DataSnapshot dataSnapshot, String email, String type) throws Exception {
+
+        String statusMessage = new String("");
+
+        User userWithGivenEmail = null;
+
+        // to see if the firebase object contains data or not.
+        if (dataSnapshot == null) {
+            statusMessage = "Failed to connect to the database.";
+            setStatusMessage(statusMessage);
+
+        } else {
+
+            // to check whether the user already exists or not.
+            userWithGivenEmail = getUserFromDataSnapshot(dataSnapshot, email);
+
+            // to push the new user and direct the old user to the login page
+            if (userWithGivenEmail == null) {
+                pushToDatabase(type);
+
+            } else {
+
+                setStatusMessage("User Exists. Please login");
+
+            }
+
+        }
+
+
+    }
+
+    /**
+     * This method is responsible for going over the data in the database and check whether the user exists or not.
+     *
+     * @param dataSnapshot The firebase object which contains all the user information
+     * @param email        The email of the user
+     * @return Returns null if user not found, other wise the user object
+     */
+    protected User getUserFromDataSnapshot(DataSnapshot dataSnapshot, String email) {
+
+        System.out.println(dataSnapshot.toString());
+
+        // loop to transverse over the data in the firebase and find the email of the current user.
+        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
+
+            User user = snapshot.getValue(User.class);
+
+            // to see if the user is not null
+            assert user != null;
+
+            // to check whether the email of the user in firebase matches with the email entered by the user or not.
+            if (user.getEmail().equals(email)) {
+
+                // returns the object if it matches, null otherwise.
+                return new User(user.getFirstName(), user.getLastName(), user.getEmail(), user.getPhone(), user.getPassword(),
+                        user.getConfirmPassword(), user.getIsEmployee());
+            }
+        }
+        return null;
+    }
+
+
+    // Reference: https://wajahatkarim.com/2018/08/encrypt-/-decrypt-strings-in-android/
+    // The below given method was taken from the above mentioned url
+    // Date accessed: 17 October,2021
+
+    /**
+     * This method is responsible for encrypting the user entered password
+     *
+     * @param password The user entered password
+     * @return Returns the encrypted string
+     * @throws Exception Check for NullPointerException
+     */
+    public String encrypt(String password) throws Exception {
+
+        String encrypted = "";
+
+        try {
+
+            // encrypts the user entered password
+            encrypted = AESUtils.encrypt(password);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return encrypted;
+    }
+
+    // Reference: https://wajahatkarim.com/2018/08/encrypt-/-decrypt-strings-in-android/
+    // The below given method was taken from the above mentioned url
+    // Date accessed: 17 October,2021
+
+    /**
+     * This method is responsible for decrypting the encrypted password string
+     *
+     * @param encrpted the encrypted password string
+     * @return returns decrypted password string
+     * @throws Exception To check for NullPointerException
+     */
+    public String decrypt(String encrpted) throws Exception {
+
+        String decrypted = "";
+
+        try {
+
+            // decrypts the encrypted user password
+            decrypted = AESUtils.decrypt(encrpted);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return decrypted;
+    }
+
+
+}
+
Index: app/src/main/java/com/example/quickcash/UserManagement/DAOUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quickcash.UserManagement;\r\n\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class DAOUser {\r\n    private DatabaseReference databaseReference;\r\n\r\n    public DAOUser() {\r\n        FirebaseDatabase db = FirebaseDatabase.getInstance();\r\n        databaseReference = db.getReference(User.class.getSimpleName());\r\n    }\r\n\r\n    public Task<Void> add(User user) {\r\n        return databaseReference.push().setValue(user);\r\n    }\r\n\r\n    public Task<Void> update(String key, HashMap<String, Object> hashMap) {\r\n        return databaseReference.child(key).updateChildren(hashMap);\r\n    }\r\n\r\n    public Task<Void> remove(String key) {\r\n        return databaseReference.child(key).removeValue();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quickcash/UserManagement/DAOUser.java b/app/src/main/java/com/example/quickcash/UserManagement/DAOUser.java
--- a/app/src/main/java/com/example/quickcash/UserManagement/DAOUser.java	
+++ b/app/src/main/java/com/example/quickcash/UserManagement/DAOUser.java	
@@ -9,8 +9,12 @@
 public class DAOUser {
     private DatabaseReference databaseReference;
 
+    public DatabaseReference getDatabaseReference() {
+        return databaseReference;
+    }
+
     public DAOUser() {
-        FirebaseDatabase db = FirebaseDatabase.getInstance();
+        FirebaseDatabase db = FirebaseDatabase.getInstance("https://csci3130-quickcash-group9-default-rtdb.firebaseio.com/");
         databaseReference = db.getReference(User.class.getSimpleName());
     }
 
Index: app/src/test/java/com/example/quickcash/ExampleUnitTest.java
===================================================================
diff --git a/app/src/test/java/com/example/quickcash/ExampleUnitTest.java b/app/src/test/java/com/example/quickcash/ExampleUnitTest.java
deleted file mode 100644
--- a/app/src/test/java/com/example/quickcash/ExampleUnitTest.java	
+++ /dev/null	
@@ -1,17 +0,0 @@
-package com.example.quickcash;
-
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-
-/**
- * Example local unit test, which will execute on the development machine (host).
- *
- * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
- */
-public class ExampleUnitTest {
-    @Test
-    public void addition_isCorrect() {
-        assertEquals(4, 2 + 2);
-    }
-}
\ No newline at end of file
Index: app/src/androidTest/java/com/example/quickcash/ExampleInstrumentedTest.java
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcash/ExampleInstrumentedTest.java b/app/src/androidTest/java/com/example/quickcash/ExampleInstrumentedTest.java
deleted file mode 100644
--- a/app/src/androidTest/java/com/example/quickcash/ExampleInstrumentedTest.java	
+++ /dev/null	
@@ -1,26 +0,0 @@
-package com.example.quickcash;
-
-import android.content.Context;
-
-import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.ext.junit.runners.AndroidJUnit4;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-
-import static org.junit.Assert.*;
-
-/**
- * Instrumented test, which will execute on an Android device.
- *
- * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
- */
-@RunWith(AndroidJUnit4.class)
-public class ExampleInstrumentedTest {
-    @Test
-    public void useAppContext() {
-        // Context of the app under test.
-        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
-        assertEquals("com.example.quickcash", appContext.getPackageName());
-    }
-}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_employee_home.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_employer_home.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_login.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_main.xml\" value=\"0.2\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"VisualizationToolProject\">\r\n    <option name=\"state\">\r\n      <ProjectState>\r\n        <option name=\"scale\" value=\"0.25416666666666665\" />\r\n      </ProjectState>\r\n    </option>\r\n  </component>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -6,9 +6,16 @@
         <entry key="..\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_employee_home.xml" value="0.25416666666666665" />
         <entry key="..\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_employer_home.xml" value="0.25416666666666665" />
         <entry key="..\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_login.xml" value="0.25416666666666665" />
+        <entry key="..\:/Downloads/Project work/development branch/csci3130_quickcash_group9/app/src/main/res/layout/activity_main.xml" value="0.264" />
+        <entry key="..\:/Downloads/Project/csci3130_quickcash_group9/app/src/main/res/layout/activity_main.xml" value="0.2" />
         <entry key="..\:/Users/joben/git/csci3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_main.xml" value="0.2" />
+        <entry key="..\:/Users/prana/Desktop/Dal Fall 2021/CSCI 3130/csci3130_quickcash_group9/app/src/main/res/layout/activity_main.xml" value="0.1796875" />
+        <entry key="app/src/main/res/layout/activity_main.xml" value="0.328506239326618" />
       </map>
     </option>
+  </component>
+  <component name="PDMPlugin">
+    <option name="skipTestSources" value="false" />
   </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\logan\\.android\\avd\\Pixel_3a_API_30_x86.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-10-17T18:29:06.352720900Z\" />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	
+++ b/.idea/deploymentTargetDropDown.xml	
@@ -12,6 +12,6 @@
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2021-10-17T18:29:06.352720900Z" />
+    <timeTargetWasSelectedWithDropDown value="2021-10-17T23:30:19.232953100Z" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.quickcash\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.QuickCash\">\r\n        <activity\r\n            android:name=\".WelcomePage\"\r\n\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"></activity>\r\n        <activity android:name=\".UserManagement.LogInActivity\"></activity>\r\n        <activity android:name=\".Home.EmployeeHomeActivity\"></activity>\r\n        <activity android:name=\".Home.EmployerHomeActivity\"></activity>\r\n    </application>\r\n\r\n</manifest>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -9,6 +9,8 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.QuickCash">
+        <activity android:name=".UserManagement.LogInActivity"></activity>
+        <activity android:name=".UserManagement.SignUpActivity"></activity>
         <activity
             android:name=".WelcomePage"
 
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Testing Firebase Connection\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.429\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.112\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnRegister\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Register\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/txtLastName\"\r\n        app:layout_constraintVertical_bias=\"0.14\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/txtFirstName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"28dp\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"textPersonName\"\r\n        android:text=\"First Name\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.497\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\"\r\n        app:layout_constraintVertical_bias=\"0.005\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/txtLastName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"textPersonName\"\r\n        android:text=\"Last Name\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.497\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/txtFirstName\"\r\n        app:layout_constraintVertical_bias=\"0.152\" />\r\n\r\n    <RadioButton\r\n        android:id=\"@+id/RadioRepairingComp\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Repairing Computer\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/btnRegister\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -10,13 +10,13 @@
         android:id="@+id/textView"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="Testing Firebase Connection"
+        android:text="Registration"
         app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintHorizontal_bias="0.429"
+        app:layout_constraintHorizontal_bias="0.498"
         app:layout_constraintLeft_toLeftOf="parent"
         app:layout_constraintRight_toRightOf="parent"
         app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.112" />
+        app:layout_constraintVertical_bias="0.039" />
 
     <Button
         android:id="@+id/btnRegister"
@@ -25,10 +25,10 @@
         android:text="Register"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintHorizontal_bias="0.672"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/txtLastName"
-        app:layout_constraintVertical_bias="0.14" />
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.963" />
 
     <EditText
         android:id="@+id/txtFirstName"
@@ -36,37 +36,137 @@
         android:layout_height="wrap_content"
         android:layout_marginTop="28dp"
         android:ems="10"
+        android:hint="First Name"
         android:inputType="textPersonName"
-        android:text="First Name"
-        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.497"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/textView"
-        app:layout_constraintVertical_bias="0.005" />
+        app:layout_constraintTop_toBottomOf="@+id/textView" />
 
     <EditText
         android:id="@+id/txtLastName"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:layout_marginTop="28dp"
         android:ems="10"
+        android:hint="Last Name"
         android:inputType="textPersonName"
-        android:text="Last Name"
-        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.497"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtFirstName" />
+
+    <EditText
+        android:id="@+id/txtEmail"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
+        android:ems="10"
+        android:hint="Email"
+        android:inputType="textEmailAddress"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.497"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtLastName" />
+
+    <EditText
+        android:id="@+id/txtUserEnteredPassword"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="24dp"
+        android:ems="10"
+        android:hint="Password"
+        android:inputType="textPassword"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.497"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtPhone" />
+
+    <EditText
+        android:id="@+id/txtConfirmPassword"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:ems="10"
+        android:hint="Confirm Password"
+        android:inputType="textPassword"
+        app:layout_constraintBottom_toTopOf="@+id/btnRegister"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.497"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/txtFirstName"
-        app:layout_constraintVertical_bias="0.152" />
+        app:layout_constraintTop_toBottomOf="@+id/txtUserEnteredPassword"
+        app:layout_constraintVertical_bias="0.105" />
+
+    <RadioButton
+        android:id="@+id/radioButton_Employer"
+        android:layout_width="60dp"
+        android:layout_height="48dp"
+        android:layout_marginBottom="52dp"
+        android:text="NO"
+        app:layout_constraintBottom_toTopOf="@+id/btnRegister"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.794"
+        app:layout_constraintStart_toStartOf="parent" />
 
     <RadioButton
-        android:id="@+id/RadioRepairingComp"
+        android:id="@+id/radioButton_Employee"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="Repairing Computer"
-        app:layout_constraintBottom_toBottomOf="parent"
+        android:text="YES"
+        app:layout_constraintBottom_toTopOf="@+id/radioButton_Employer"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.79"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtConfirmPassword"
+        app:layout_constraintVertical_bias="0.666" />
+
+    <TextView
+        android:id="@+id/textView2"
+        android:layout_width="157dp"
+        android:layout_height="57dp"
+        android:text="Is Employed?"
+        app:layout_constraintBottom_toTopOf="@+id/btnRegister"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.155"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtConfirmPassword"
+        app:layout_constraintVertical_bias="0.394" />
+
+    <TextView
+        android:id="@+id/statusLabel"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text=""
+        android:textSize="16dp"
+        app:layout_constraintBottom_toTopOf="@+id/btnRegister"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtConfirmPassword"
+        app:layout_constraintVertical_bias="0.914"></TextView>
+
+    <EditText
+        android:id="@+id/txtPhone"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="20dp"
+        android:ems="10"
+        android:hint="Phone Number"
+        android:inputType="phone"
         app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.497"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtEmail" />
+
+    <Button
+        android:id="@+id/buttonLogin"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Login"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/btnRegister"
+        app:layout_constraintHorizontal_bias="0.522"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/btnRegister" />
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.963" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/quickcash/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quickcash;\r\n\r\nimport android.os.Bundle;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.quickcash.UserManagement.DAOUser;\r\nimport com.example.quickcash.UserManagement.User;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private EditText firstName;\r\n    private EditText lastName;\r\n    private Button register;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        firstName = (EditText) findViewById(R.id.txtFirstName);\r\n        lastName = (EditText) findViewById(R.id.txtLastName);\r\n        register = (Button) findViewById(R.id.btnRegister);\r\n\r\n        DAOUser daoUser = new DAOUser();\r\n        register.setOnClickListener( v -> {\r\n            User user = new User(firstName.getText().toString(), lastName.getText().toString() );\r\n            daoUser.add(user).addOnSuccessListener(saved -> {\r\n                Toast.makeText(MainActivity.this, \"Firebase Connected! Data Saved\",\r\n                        Toast.LENGTH_LONG).show();}).addOnFailureListener(failed -> {\r\n                            Toast.makeText(MainActivity.this, \"Data not Saved\",Toast.LENGTH_LONG).show();\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quickcash/MainActivity.java b/app/src/main/java/com/example/quickcash/MainActivity.java
--- a/app/src/main/java/com/example/quickcash/MainActivity.java	
+++ b/app/src/main/java/com/example/quickcash/MainActivity.java	
@@ -1,41 +1,23 @@
 package com.example.quickcash;
 
+import android.content.Intent;
 import android.os.Bundle;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.example.quickcash.UserManagement.DAOUser;
-import com.example.quickcash.UserManagement.User;
+import com.example.quickcash.UserManagement.SignUpActivity;
+
 
 public class MainActivity extends AppCompatActivity {
-    private EditText firstName;
-    private EditText lastName;
-    private Button register;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-
-        firstName = (EditText) findViewById(R.id.txtFirstName);
-        lastName = (EditText) findViewById(R.id.txtLastName);
-        register = (Button) findViewById(R.id.btnRegister);
-
-        DAOUser daoUser = new DAOUser();
-        register.setOnClickListener( v -> {
-            User user = new User(firstName.getText().toString(), lastName.getText().toString() );
-            daoUser.add(user).addOnSuccessListener(saved -> {
-                Toast.makeText(MainActivity.this, "Firebase Connected! Data Saved",
-                        Toast.LENGTH_LONG).show();}).addOnFailureListener(failed -> {
-                            Toast.makeText(MainActivity.this, "Data not Saved",Toast.LENGTH_LONG).show();
-            });
-        });
+        Intent intent = new Intent(this, SignUpActivity.class);
+        startActivity(intent);
     }
 
-
+}
 
 
-}
\ No newline at end of file
Index: app/src/main/java/com/example/quickcash/WelcomePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quickcash;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport com.example.quickcash.UserManagement.LogInActivity;\r\nimport com.example.quickcash.UserManagement.SignUpActivity;\r\nimport com.google.firebase.FirebaseApp;\r\n\r\npublic class WelcomePage extends AppCompatActivity {\r\nprivate Button register;\r\nprivate Button login;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_welcome_page);\r\n\r\n//      Created two buttons: register and login and their respective event listeners to navigate to those pages\r\n        register = (Button) findViewById(R.id.registerbutton);\r\n        register.setOnClickListener(view -> {navigateToRegPage();});\r\n\r\n        login = (Button) findViewById(R.id.loginbutton);\r\n        login.setOnClickListener(view ->{navigateToLoginPage();});\r\n\r\n        FirebaseApp.initializeApp(this);\r\n    }\r\n\r\n\r\n//    Created intents for navigating to login and registration pages\r\n        protected void navigateToRegPage(){\r\n            Intent regPageIntent = new Intent(this, SignUpActivity.class);\r\n            startActivity(regPageIntent);\r\n        }\r\n\r\n        protected void navigateToLoginPage(){\r\n            Intent loginPageIntent = new Intent(this, LogInActivity.class);\r\n            startActivity(loginPageIntent);\r\n        }\r\n\r\n    }
===================================================================
diff --git a/app/src/main/java/com/example/quickcash/WelcomePage.java b/app/src/main/java/com/example/quickcash/WelcomePage.java
--- a/app/src/main/java/com/example/quickcash/WelcomePage.java	
+++ b/app/src/main/java/com/example/quickcash/WelcomePage.java	
@@ -4,7 +4,6 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.view.View;
 import android.widget.Button;
 
 import com.example.quickcash.UserManagement.LogInActivity;
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"510755819116\",\r\n    \"firebase_url\": \"https://csci3130-quickcash-group9-default-rtdb.firebaseio.com\",\r\n    \"project_id\": \"csci3130-quickcash-group9\",\r\n    \"storage_bucket\": \"csci3130-quickcash-group9.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:510755819116:android:f67b7eccfe1479a5ed1249\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.quickcash\"\r\n        }\r\n      },\r\n      \"oauth_client\": [\r\n        {\r\n          \"client_id\": \"510755819116-c6s5fevhcqekrh0h9n5r25qa8sc2el5d.apps.googleusercontent.com\",\r\n          \"client_type\": 3\r\n        }\r\n      ],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyCqqJFKmUa1Kx0ygqKXYrcHr2SJ6EPB1SY\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": [\r\n            {\r\n              \"client_id\": \"510755819116-c6s5fevhcqekrh0h9n5r25qa8sc2el5d.apps.googleusercontent.com\",\r\n              \"client_type\": 3\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
--- a/app/google-services.json	
+++ b/app/google-services.json	
@@ -1,34 +1,33 @@
 {
   "project_info": {
-    "project_number": "510755819116",
-    "firebase_url": "https://csci3130-quickcash-group9-default-rtdb.firebaseio.com",
-    "project_id": "csci3130-quickcash-group9",
-    "storage_bucket": "csci3130-quickcash-group9.appspot.com"
+    "project_number": "949185417366",
+    "project_id": "quick-cash-registration-db",
+    "storage_bucket": "quick-cash-registration-db.appspot.com"
   },
   "client": [
     {
       "client_info": {
-        "mobilesdk_app_id": "1:510755819116:android:f67b7eccfe1479a5ed1249",
+        "mobilesdk_app_id": "1:949185417366:android:f7523b50102fdb2612f2b7",
         "android_client_info": {
           "package_name": "com.example.quickcash"
         }
       },
       "oauth_client": [
         {
-          "client_id": "510755819116-c6s5fevhcqekrh0h9n5r25qa8sc2el5d.apps.googleusercontent.com",
+          "client_id": "949185417366-g42ovs1tpf4u5ohcp499r9f3td43caas.apps.googleusercontent.com",
           "client_type": 3
         }
       ],
       "api_key": [
         {
-          "current_key": "AIzaSyCqqJFKmUa1Kx0ygqKXYrcHr2SJ6EPB1SY"
+          "current_key": "AIzaSyBZfsbOWQBh4sM84KX6QyGcY3X8dALmBdM"
         }
       ],
       "services": {
         "appinvite_service": {
           "other_platform_oauth_client": [
             {
-              "client_id": "510755819116-c6s5fevhcqekrh0h9n5r25qa8sc2el5d.apps.googleusercontent.com",
+              "client_id": "949185417366-g42ovs1tpf4u5ohcp499r9f3td43caas.apps.googleusercontent.com",
               "client_type": 3
             }
           ]
